<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gth.delivery.dao.FriendMapper">
	<resultMap id="BaseResultMap" type="com.gth.delivery.model.Friend">
		<id column="id1" property="id1" jdbcType="INTEGER" />
		<id column="id2" property="id2" jdbcType="INTEGER" />
		<result column="time" property="time" jdbcType="DATE" />
	</resultMap>
	<sql id="Base_Column_List">
		id1, id2, time
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="map">
		select
		<include refid="Base_Column_List" />
		from friend
		where id1 = #{id1,jdbcType=INTEGER}
		and id2 =
		#{id2,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="map">
		delete from friend
		where id1 = #{id1,jdbcType=INTEGER}
		and id2 = #{id2,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.gth.delivery.model.Friend">
		insert into friend (id1, id2,
		time)
		values (#{id1,jdbcType=INTEGER}, #{id2,jdbcType=INTEGER},
		#{time,jdbcType=DATE})
	</insert>
	<insert id="insertSelective" parameterType="com.gth.delivery.model.Friend">
		insert into friend
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id1 != null">
				id1,
			</if>
			<if test="id2 != null">
				id2,
			</if>
			<if test="time != null">
				time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id1 != null">
				#{id1,jdbcType=INTEGER},
			</if>
			<if test="id2 != null">
				#{id2,jdbcType=INTEGER},
			</if>
			<if test="time != null">
				#{time,jdbcType=DATE},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.gth.delivery.model.Friend">
		update friend
		<set>
			<if test="time != null">
				time = #{time,jdbcType=DATE},
			</if>
		</set>
		where id1 = #{id1,jdbcType=INTEGER}
		and id2 = #{id2,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.gth.delivery.model.Friend">
		update friend
		set
		time = #{time,jdbcType=DATE}
		where id1 = #{id1,jdbcType=INTEGER}
		and id2
		= #{id2,jdbcType=INTEGER}
	</update>

	<select id="selectFriendByOneId" resultType="java.util.List"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select * from friend
		where
		id1=#{id} or id2=#{id}
	</select>
	
	<select id="selectPage" resultType="java.util.List" resultMap="BaseResultMap">
		select * from friend
		limit #{offset}, #{page}
	</select>
	
	<select id="selectCount" resultType="java.lang.Integer" >
		select count(*) from friend
	</select>
</mapper>